#-------------------------------------------------------------------------------#
## This configuration file needs to be placed in ${Home Directory}/config.yaml
#-------------------------------------------------------------------------------#


# Port of HTTP(S) proxy server on the local end
port: 7890

# Port of SOCKS5 proxy server on the local end
socks-port: 7891

# Transparent proxy server port for Linux and macOS
# redir-port: 7892

# HTTP(S) and SOCKS5 server on the same port
mixed-port: 7890

# authentication of local SOCKS5/HTTP(S) server
# authentication:
#  - "user1:pass1"
#  - "user2:pass2"

# Set to true to allow connections to local-end server from
# other LAN IP addresses
allow-lan: false

# This is only applicable when `allow-lan` is `true`
# '*': bind all IP addresses
# 192.168.122.11: bind a single IPv4 address
# "[aaaa::a8aa:ff:fe09:57d8]": bind a single IPv6 address
# bind-address: '*'

# Clash router working mode
# rule: rule-based packet routing
# global: all packets will be forwarded to a single endpoint
# direct: directly forward the packets to the Internet
# rule / global / direct / script (default is rule)
mode: rule

# Clash by default prints logs to STDOUT
# info / warning / error / debug / silent
log-level: silent

# When set to false, resolver won't translate hostnames to IPv6 addresses
ipv6: false

# RESTful web API listening address
external-controller: 127.0.0.1:9090

experimental:
  ignore-resolve-fail: true

# A relative path to the configuration directory or an absolute path to a
# directory in which you put some static web resource. Clash core will then
# serve it at `${API}/ui`.
# external-ui: folder

# Secret for the RESTful API (optional)
# Authenticate by spedifying HTTP header `Authorization: Bearer ${secret}`
# ALWAYS set a secret if RESTful API is listening on 0.0.0.0
# secret: ""

# Outbound interface name
# interface-name: en0

# Static hosts for DNS server and connection establishment, only works
# when `dns.enhanced-mode` is `redir-host`.
#
# Wildcard hostnames are supported (e.g. *.clash.dev, *.foo.*.example.com)
# Non-wildcard domain names has a higher priority than wildcard domain names
# e.g. foo.example.com > *.example.com > .example.com
# P.S. +.foo.com equals to .foo.com and foo.com
hosts:
  'mtalk.google.com': 108.177.125.188
  'smtp.gmail.com': 74.125.20.109
  't.cn': 203.107.55.116
  # '*.clash.dev': 127.0.0.1
  # '.dev': 127.0.0.1
  # 'alpha.clash.dev': '::1'

# DNS server settings -------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------

# This section is optional. When not present, DNS server will be disabled.
dns:
  enable: true
  listen: 127.0.0.1:53
  
  # when false, response to AAAA questions will be empty
  ipv6: false

  # These nameservers are used to resolve the DNS nameserver hostnames below.
  # Specify IP addresses only
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
    - 8.8.8.8
    - 1.0.0.1
  enhanced-mode: fake-ip # or redir-host
  fake-ip-range: 198.18.0.1/16 # Fake IP addresses pool CIDR
  
  # Hostnames in this list will not be resolved with fake IPs
  # i.e. questions to these domain names will always be answered with their
  # real IP addresses
  # fake ip white domain list, aka Always Real IP
  fake-ip-filter:
    - "*.lan"
    - localhost.ptlogin2.qq.com
    - stun.*.*.*
    - stun.*.*
    - time.windows.com
    - time.nist.gov
    - time.apple.com
    - time.asia.apple.com
    - "*.ntp.org.cn"
    - "*.openwrt.pool.ntp.org"
    - time1.cloud.tencent.com
    - time.ustc.edu.cn
    - pool.ntp.org
    - ntp.ubuntu.com
    - ntp.aliyun.com
    - ntp1.aliyun.com
    - ntp2.aliyun.com
    - ntp3.aliyun.com
    - ntp4.aliyun.com
    - ntp5.aliyun.com
    - ntp6.aliyun.com
    - ntp7.aliyun.com
    - time1.aliyun.com
    - time2.aliyun.com
    - time3.aliyun.com
    - time4.aliyun.com
    - time5.aliyun.com
    - time6.aliyun.com
    - time7.aliyun.com
    - "*.time.edu.cn"
    - time1.apple.com
    - time2.apple.com
    - time3.apple.com
    - time4.apple.com
    - time5.apple.com
    - time6.apple.com
    - time7.apple.com
    - time1.google.com
    - time2.google.com
    - time3.google.com
    - time4.google.com
    - music.163.com
    - "*.music.163.com"
    - "*.126.net"
    - musicapi.taihe.com
    - music.taihe.com
    - songsearch.kugou.com
    - trackercdn.kugou.com
    - "*.kuwo.cn"
    - api-jooxtt.sanook.com
    - api.joox.com
    - joox.com
    - y.qq.com
    - "*.y.qq.com"
    - streamoc.music.tc.qq.com
    - mobileoc.music.tc.qq.com
    - isure.stream.qqmusic.qq.com
    - dl.stream.qqmusic.qq.com
    - aqqmusic.tc.qq.com
    - amobile.music.tc.qq.com
    - "*.xiami.com"
    - "*.music.migu.cn"
    - music.migu.cn
    - "*.msftconnecttest.com"
    - "*.msftncsi.com"
    - "*.*.*.srv.nintendo.net"
    - "*.*.stun.playstation.net"
    - xbox.*.*.microsoft.com
    - "*.*.xboxlive.com"
    - 'dns.msftncsi.com'
    - 'www.msftncsi.com'
    - 'www.msftconnecttest.com'

  # Supports UDP, TCP, DoT, DoH. You can specify the port to connect to.
  # All DNS questions are sent directly to the nameserver, without proxies
  # involved. Clash answers the DNS question with the first result gathered.
  nameserver:
    - 119.29.29.29
    - 8.8.8.8
    - https://dns.alidns.com/dns-query
    - https://aliyun.rubyfish.cn/dns-query
    - tls://dns.rubyfish.cn:853 # DNS over TLS
    - https://1.1.1.1/dns-query # DNS over HTTPS

  # When `fallback` is present, the DNS server will send concurrent requests
  # to the servers in this section along with servers in `nameservers`.
  # The answers from fallback servers are used when the GEOIP country
  # is not `CN`.
  fallback:
    - https://cloudflare-dns.com/dns-query

  # If IP addresses resolved with servers in `nameservers` are in the specified
  # subnets below, they are considered invalid and results from `fallback`
  # servers are used instead.
  #
  # IP address resolved with servers in `nameserver` is used when
  # `fallback-filter.geoip` is true and when GEOIP of the IP address is `CN`.
  #
  # If `fallback-filter.geoip` is false, results from `fallback` nameservers
  # are always used, and answers from `nameservers` are discarded.
  #
  # This is a countermeasure against DNS pollution attacks.
  fallback-filter:
    geoip: true
    # ipcidr:
      # - 240.0.0.0/4

# DNS end -------------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------


# proxies start here --------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------
# 
# For examples of supported protocols and encryption algorithms
# please refer to the Clash project: https://github.com/Dreamacro/clash/blob/master/README.md
# 
# 
# proxies:
# 
# 
# proxies end----------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------


# proxy-providers start here ------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------
# specific format refer toï¼šhttps://lancellc.gitbook.io/clash/clash-config-file/proxy-provider
proxy-providers:
  # remoteproxy:    # name of the provider, in this example the name of proxy-provider is remoteproxy
    # type:         # type of the provider, it can be a HTTP or a File (http / file)
    # path:         # where is the file, ./ relative to clash home
    # url:          # only available when type is HTTP, where to download a file. You don't need to create a new file in local space
    # interval:     # auto-update interval, only available when type is HTTP. (seconds)
    # health-check: # health check option start at here
      # enable:
      # url:
      # interval:

  DuangCloud:
    type: http
    path: ./DuangCloud.yaml
    # url: 
    interval: 604800  # seconds --> 7 days
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 86400  # seconds --> 1 days
# proxy-providers end--------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------


# proxy-groups start here----------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------
proxy-groups:
# For examples of proxy groups
# refer to: https://github.com/Dreamacro/clash/blob/master/README.md

# url-test select which proxy will be used by benchmarking speed to a URL
# fallback selects an available policy by priority. The availability is tested by accessing an URL, just like an auto url-test group
# load-balance: The request of the same eTLD will be dial to the same proxy
# select is used for selecting proxy or proxy group

  # !!!Note the "use" here instead of "proxies"!!!
  #
  # use / proxies can be mixed
  #
  # - name: PROXY
  #   type: select
  #   use:
  #     - DuckDuckGo
  #   proxies:
  #     - Fallback
  #     - 1
  #     - 2
  #     - 3
  #   url:
  #   interval: "" (seconds)
  #

  - name: Auto
    type: fallback # / url-test / fallback / select / load-balance
    proxies:
      - Latency
      - Load-Balance
    url: http://www.gstatic.com/generate_204
    interval: "600"

  - name: Latency
    type: url-test
    use:  # Note that this is "use"
      - DuangCloud  # This is the name of the "proxy-providers" above
    url: http://www.gstatic.com/generate_204
    interval: "600"

  - name: Load-Balance
    type: load-balance
    use:
      - DuangCloud
    url: http://www.gstatic.com/generate_204
    interval: "600"

  - name: Out-Of-Rule
    type: load-balance
    proxies:
      - Auto
      - DIRECT
    url: http://www.gstatic.com/generate_204
    interval: "600"

# proxy-groups end-----------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------


# rule-providers start here--------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------
# information for rule provider refer to: https://lancellc.gitbook.io/clash/clash-config-file/rule-provider
# if the domain name "raw.githubusercontent.com" cannot be accessed
# you can use the second domain name "cdn.jsdelivr.net"
# the url format changes when using the cdn domain name
# refer to: https://github.com/Loyalsoldier/clash-rules/blob/master/README.md
rule-providers:
  # externalrule:   # name of the providerï¼Œin this example the name of the rule-provider is externalrule
    # type:         # type of the provider, it can be a HTTP or a File
    # behavior:     # the type of rules
    # path:         # where is the file, ./ relative to clash home
    # url:          # only available when type is HTTP, where to download a file. You don't need to create a new file in local space
    # interval:     # auto-update interval,only available when type is HTTP (seconds)

  # https://github.com/DivineEngine/Profiles/tree/master/Clash start here
  Unbreak:
    type: http
    behavior: classical
    path: ./RuleSet/Unbreak.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Unbreak.yaml
    interval: 172800  # seconds --> 2 days

  Global:
    type: http
    behavior: classical
    path: ./RuleSet/Global.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Global.yaml
    interval: 172800  # seconds --> 2 days

  China:
    type: http
    behavior: classical
    path: ./RuleSet/China.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/China.yaml
    interval: 172800  # seconds --> 2 days

  ChinaIP:
    type: http
    behavior: ipcidr
    path: ./RuleSet/ChinaIP.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Extra/ChinaIP.yaml
    interval: 172800  # seconds --> 2 days

  # streaming media rule set
  Streaming:
    type: http
    behavior: classical
    path: ./RuleSet/Streaming.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/StreamingMedia/Streaming.yaml
    interval: 172800  # seconds --> 2 days

  # advertisement
  Advertising:
    type: http
    behavior: classical
    path: ./RuleSet/Advertising.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Guard/Advertising.yaml
    interval: 172800  # seconds --> 2 days

  Hijacking:
    type: http
    behavior: classical
    path: ./RuleSet/Hijacking.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Guard/Hijacking.yaml
    interval: 172800  # seconds --> 2 days

  Privacy:
    type: http
    behavior: classical
    path: ./RuleSet/Privacy.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Guard/Privacy.yaml
    interval: 172800  # seconds --> 2 days
  # https://github.com/DivineEngine/Profiles/tree/master/Clash end


  # https://github.com/Loyalsoldier/clash-rules start here

  # advertising domain list
  reject:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt"
    path: ./RuleSet/reject.yaml
    interval: 172800  # seconds --> 2 days

  # iCloud domain list
  icloud:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt"
    path: ./RuleSet/icloud.yaml
    interval: 172800  # seconds --> 2 days

  # Apple domain list
  apple:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt"
    path: ./RuleSet/apple.yaml
    interval: 172800  # seconds --> 2 days

  # Google domain list
  google:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt"
    path: ./RuleSet/google.yaml
    interval: 172800  # seconds --> 2 days

  # proxy domain list
  proxy:
    type: http
    behavior: domain
    # url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/proxy.txt"
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt"
    path: ./RuleSet/proxy.yaml
    interval: 172800  # seconds --> 2 days

  # list of Directly Connected Domains
  direct:
    type: http
    behavior: domain
    # url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/direct.txt"
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt"
    path: ./RuleSet/direct.yaml
    interval: 172800  # seconds --> 2 days

  # GFWList domain list
  gfw:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt"
    path: ./RuleSet/gfw.yaml
    interval: 172800  # seconds --> 2 days

  # GreatFire domain list
  greatfire:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/greatfire.txt"
    path: ./RuleSet/greatfire.yaml
    interval: 172800  # seconds --> 2 days

  # list of top-level domain names not used in mainland China
  tld-not-cn:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt"
    path: ./RuleSet/tld-not-cn.yaml
    interval: 172800  # seconds --> 2 days

  # list of IPv4 addresses in Mainland China
  cncidr:
    type: http
    behavior: ipcidr
    # url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/cncidr.txt"
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt"
    path: ./RuleSet/cncidr.yaml
    interval: 172800  # seconds --> 2 days

  # LAN IP and reserved IP address list
  lancidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt"
    path: ./RuleSet/lancidr.yaml
    interval: 172800  # seconds --> 2 days
  # https://github.com/Loyalsoldier/clash-rules end

# rule-providers end---------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------


# rules start here-----------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------
# no-resolve (no dns resolution)
rules:
  # Unbreak
  - RULE-SET,Unbreak,DIRECT

  # China Area Network
  - RULE-SET,China,DIRECT

  # Global Area Network
  - RULE-SET,Global,Auto

  - RULE-SET,Streaming,Auto

  # Use ChinaIP from ipipdotnet to solve the problem of inaccurate data
  - RULE-SET,ChinaIP,DIRECT,no-resolve

  - RULE-SET,reject,REJECT
  - RULE-SET,icloud,DIRECT
  - RULE-SET,apple,DIRECT
  - RULE-SET,google,DIRECT
  - RULE-SET,direct,DIRECT
  - RULE-SET,cncidr,DIRECT
  - RULE-SET,lancidr,DIRECT
  - RULE-SET,proxy,Auto
  - RULE-SET,gfw,Auto
  - RULE-SET,greatfire,Auto
  - RULE-SET,tld-not-cn,Auto

  # you can disable the "GEOIP,CN" rule when using ChinaIP.yaml
  # GeoIP China
  # - GEOIP,CN,DIRECT,no-resolve

  - RULE-SET,Advertising,REJECT
  - RULE-SET,Hijacking,REJECT
  - RULE-SET,Privacy,REJECT

  # The Match rule must be written after all other rules
  # It defines the default policy for requests which are not matched by any other rules
  - MATCH,Out-Of-Rule
